CHIP ALU {

    IN  // 16-bit inputs:
        x[16], y[16],
        // Control bits:
        zx, // Zero the x input
        nx, // Negate the x input
        zy, // Zero the y input
        ny, // Negate the y input
        f,  // Function code: 1 for add, 0 for and
        no; // Negate the out output

    	OUT // 16-bit output
        out[16], ng, zr;

	PARTS:

	NotXZeroX(x=x,zx=zx,nx=nx, output=notxzerox); //chip to negate x or zero x
	NotYZeroY( y=y, zy=zy, ny=ny, output=notyzeroy); //chip to negate y or zero y 
 	AddAndChip( x=notxzerox, y=notyzeroy, f=f, result=result); //and or add x and y
	OutNotOut ( result=result, no=no, ouputnotouput=out, ouputnotouput=zdr, ouputnotouput[15]=msb);
	//chip to not the result

	Or16to1(x=zdr, out=zrresult);// or all the 16bit to 1 to find if 0 or 1 ouput
	Not(in=zrresult, out=zr); //not the result to set zr ==1 if the output is zero

	And(a=msb, b=true, out=ng); // checks the msb to see if a negative number

}